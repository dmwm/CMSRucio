#! /usr/bin/env python3

from __future__ import print_function, division, absolute_import

import base64
import json
import os
from argparse import ArgumentParser
from rucio.client import Client

import gitlab
from CMSRSE import CMSRSE
import pdb
import logging
import sys

parser = ArgumentParser(description="Update a site definition from GitLab")
parser.add_argument('--type', dest='cms_type', help='type of RSE (prod-real, int-real, test, temp).',default=None, required=True)
parser.add_argument('--dryrun', dest='dry_run', action='store_true')
parser.add_argument('--debug', action='store_true', help='be more verbose')
parser.add_argument('--just_print', dest='print_scheme', help='just prints the given scheme: gsiftp, srm, davs, xroot, all', \
    default=None, required=False, choices=["gsiftp", "srm", "davs", "root", "all"])
parser.add_argument('rse', help='the RSE to modify e.g. T2_US_UCSD', default=None)

options = parser.parse_args()

logger = logging.getLogger("setOneRucioFromGitlab")
logger = logging.getLogger()
fh = logging.StreamHandler()
fh_formatter = logging.Formatter('%(asctime)s  %(levelname)s - %(message)s', datefmt='%Y%m%d %H:%M:%S')
fh.setFormatter(fh_formatter)
logger.addHandler(fh)

if options.debug:
    logger.setLevel(level=logging.DEBUG)
else:
    logger.setLevel(level=logging.INFO)


# Get all the projects from GitLab
private_token = os.environ['GITLAB_TOKEN']
gl = gitlab.Gitlab('https://gitlab.cern.ch', private_token=private_token)
project = gl.projects.get('SITECONF/'+options.rse)
f = project.files.get('storage.json', 'master')
sites = json.loads(base64.b64decode(f.content))

client = Client()

SKIP_SITES = []

for site in sites:
    print('Checking %s and type %s' % (site['rse'], options.cms_type))
    if site['rse']:
        if "_Tape" in site['rse'] or site['rse'] in SKIP_SITES:
            logger.info("RSE: %s in SKIP_SITES. slkipping ...", site['rse'])
            continue
             
        rse = CMSRSE(site, dry=options.dry_run, cms_type=options.cms_type)
        if options.print_scheme:
            rse.show_proto(options.print_scheme)
        else:
            if rse.update():
                print('RSE %s and type %s changed' % (rse.rse_name, rse.rucio_rse_type))
            else:
                print('RSE %s and type %s unchanged' % (rse.rse_name, rse.rucio_rse_type))
    
    else:
        print('No RSE defined in JSON for site %s' % site['site'])

